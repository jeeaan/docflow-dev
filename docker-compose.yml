version: '3'

services:
    java7-maven:
        image: jftec/docflow4_java7-maven:v0.0.4
        container_name: docflow-java7-dev
        volumes:
            - ./thoth-api/docflow4-web:/usr/src/app
            - ./thoth-api/docflow4-web/src/main/resources/config/config-files:/usr/src/app/config-files/docflow
        working_dir: /usr/src/app
        user: root
        ports:
          - "8080:8080"
        depends_on:
            - postgres
        networks:
            - docflow-network
        command: >
            /bin/sh -c "
                echo '‚öôÔ∏è  Executando mvn -U eclipse:clean eclipse:eclipse clean install' && \
                mvn -U eclipse:clean eclipse:eclipse clean install -DskipTests -Dpmd.skip -Dcpd.skip -Dfindbugs.skip -Dcheckstyle.skip -Djacoco.skip -Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=/root/.m2/repository && \
                echo '‚öôÔ∏è  Executando mvn dependency:copy-dependencies' && \
                mvn dependency:copy-dependencies && \
                echo 'üîç Listando o conte√∫do do diret√≥rio /usr/src/app/target/dependency' && \
                ls -la /usr/src/app/target/dependency && \
                echo 'üöÄ Iniciando o Jetty' && \
                java -Ddataeasy.config.path=/usr/src/app/config-files \
                     -Ddocflow.config.server.master=true \
                     -Ddocflow.config.auditoria.pathToSQLite=/usr/src/app/config-files/docflow/auditoria.sqlite \
                     -Xms512m -Xmx1g -XX:MaxPermSize=256m \
                     -cp /usr/src/app/target/test-classes:/usr/src/app/target/classes:/usr/src/app/target/dependency/* \
                     br.com.dataeasy.docflow4.web.JettyInitializer
            "
        environment:
            - DATASOURCE_URL=jdbc:postgresql://docflow4-postgres-dev:5432/docflow
            - DATASOURCE_USERNAME=postgres
            - DATASOURCE_PASSWORD=postgres

    postgres:
        image: postgres:9.6
        container_name: docflow4-postgres-dev
        environment:
            - POSTGRES_DB=docflow
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        ports:
            - "5432:5432"
        volumes:
            - ./postgres_data:/var/lib/postgresql/data
        networks:
            - docflow-network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 10s
            retries: 10

networks:
    docflow-network:
        driver: bridge

